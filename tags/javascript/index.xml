<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Experiences of a developer</title>
    <link>http://www.bleathem.ca/tags/javascript/</link>
    <description>Recent content in Javascript on Experiences of a developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.bleathem.ca/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vert.x with gulp.js</title>
      <link>http://www.bleathem.ca/blog/vert.x-with-gulp.js/</link>
      <pubDate>Mon, 26 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.bleathem.ca/blog/vert.x-with-gulp.js/</guid>
      <description>Vert.x is often put forward as a polyglot alternative to node.js that runs on the JVM. A read through the vert.x javascript docs indicates that javascript is a first-class language in vert.x, and both node.js and vert.x use an event-driven, non-blocking I/O programming model. But to what degree will a node programmer feel at home in writing a vert.x application?
 In this blog post I will look at using gulp, a node.</description>
    </item>
    
    <item>
      <title>Polyglot Widgets</title>
      <link>http://www.bleathem.ca/blog/polyglot-widgets/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://www.bleathem.ca/blog/polyglot-widgets/</guid>
      <description>JBoss Developer Framework   The JBoss JDF project shows Java EE developers how to build state-of-the-art applications using the JBoss implementations of the Java EE stack. Specifically, the JDF View Frameworks section identifies a number of alternative approaches one can take when developing the view layer of your application. We in the RichFaces project have been working towards better supporting this effort by redesigning our JSF component architecture to allow the javascript part of our components (what we call our &amp;ldquo;widgets&amp;rdquo;) to be used independent of JSF, either in a standalone manner or coupled with another web framework.</description>
    </item>
    
  </channel>
</rss>