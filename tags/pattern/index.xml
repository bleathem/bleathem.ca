<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pattern on Experiences of a developer</title>
    <link>bleathem.github.io/bleathem.ca/tags/pattern/</link>
    <description>Recent content in Pattern on Experiences of a developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Oct 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="bleathem.github.io/bleathem.ca/tags/pattern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Error handling in a request/response model with the mediator pattern</title>
      <link>bleathem.github.io/bleathem.ca/blog/error-handling-in-a-request/response-model-with-the-mediator-pattern/</link>
      <pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>bleathem.github.io/bleathem.ca/blog/error-handling-in-a-request/response-model-with-the-mediator-pattern/</guid>
      <description>The mediator pattern Addy Osmani has a great blog post introducing the mediator pattern in his post Patterns For Large-Scale JavaScript Application Architecture. I&amp;#8217;ve recently started working with this pattern, using the mediator.js implementation available via npm. Overall the pattern works well when notifying one module of changes in another; for example when publishing state changes.
 However one area where the pattern seems to fall short is when one module wants to request information from another.</description>
    </item>
    
  </channel>
</rss>