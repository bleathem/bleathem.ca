<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gulp on Experiences of a developer</title>
    <link>bleathem.github.io/bleathem.ca/tags/gulp/</link>
    <description>Recent content in Gulp on Experiences of a developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="bleathem.github.io/bleathem.ca/tags/gulp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vert.x with gulp.js</title>
      <link>bleathem.github.io/bleathem.ca/blog/vert.x-with-gulp.js/</link>
      <pubDate>Mon, 26 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>bleathem.github.io/bleathem.ca/blog/vert.x-with-gulp.js/</guid>
      <description>Vert.x is often put forward as a polyglot alternative to node.js that runs on the JVM. A read through the vert.x javascript docs indicates that javascript is a first-class language in vert.x, and both node.js and vert.x use an event-driven, non-blocking I/O programming model. But to what degree will a node programmer feel at home in writing a vert.x application?
 In this blog post I will look at using gulp, a node.</description>
    </item>
    
  </channel>
</rss>